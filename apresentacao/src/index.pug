doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title HandOnDocker

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article.deck

      section
        h1 HandsOnDocker

      section
        h2 Objeto de Investigação

        p Como efetivamente podemos com que determinado produto desenvolvido efetivamente possa chegar à esteira de produção? Como fazer? Qual o formato aceito pela esteira?

        img(src="images/empacotamento.png" style='width: 85%; height: 65%; margin-left:auto; margin-right: auto; margin-botom: 20px; display: block;')

      section

        img(src="images/docker-5.svg" style='width:50%; height:50%; margin: auto;')

      section
        h2 O que é o Docker?

        p Docker é uma tecnologia de virtualização de processos, em que aplicações são encapsuladas em contêineres e iniciadas como um processo isolado no sistema operacional.

        img(src="images/virt_docker.png" style='width:70%; height:60%; margin-left:auto; margin-right: auto; display: block;')

      section
        h2 O que é uma Imagem?

        p Uma imagem é uma fôrma que contém todo o software e configurações necessários para que determinada aplicação funcione. Após sua construção ("build") a imagem pode ser iniciada em qualquer computador que possua o Docker instalado.

        img(src="images/docker_images.png")

      section
        h2 Que imagens existem e onde procurar?

        p O DockerHub e o Quay.Io são grandes fontes de imagens oficiais e também criadas pela comunidade.

        img(src="images/dockerhub.png" style='width:80%; height:50%; margin: auto;')

      section
        h2 O que é um "Container"?

        p É um processo criado a partir da imagem que em tempo de execução ganha recursos isolados, como memória, rede, disco, etc. É efêmero.

        img(src="images/docker-filesystems-multilayer.png" style='width: 60%; heigth: 60%;')

      section 
        h2 Ciclo de Vida de Imagens e Contêineres

        p Espera-se que, qualquer mudança, por menor que seja, resulte em uma nova imagem, pois a capacidade de se repetir determinado processo de `deploy` se base no princípio da imutabilidade.

        img(src="images/ciclo_containers.png" style='width:90%; height:40%; margin: auto;')

      section
        h2 Uso de Volumes Locais no Docker

        p Para que os dados persistam entre a criação de novos contêineres é necessário que um volume, que nada mais é do que um espaço persistente, seja disponibilizado para um Container.
        img(src="images/docker_volumes.png" style='width:90%; height:40%; margin: auto;')

      section
        h2 Conectividade Entre Contêineres

        p Usando redes definidas por software (SDNs), é possível referenciar os serviços necessários para funcionamento de uma aplicação.

        img(src="images/docker_networking.png" )
  
      section
        h2 Docker Compose

        p Configuração e dependências entre serviços de maneira declarativa.

        img(src="images/docker_compose.png" style='width:80%; height: 60%; margin: auto;')
  
      section
        h2 E o que vem depois? Escala e Orquestradores

        P Docker Swarm Mode, Mesos/Marathon/ Kubernetes

        img(src="images/docker_swarm.png" style='width:80%; height: 60%; margin: auto;')

    script(src='build/build.js')
